import{_ as s,o,c as n,e}from"./app.93bd0de6.js";const a={},l=e(`<h1 id="countrules-class" tabindex="-1"><a class="header-anchor" href="#countrules-class" aria-hidden="true">#</a> CountRules <span class="symbol">- class</span></h1><div class="language-kotlin ext-kt"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">CountRules</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">constructor</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"></span></code></pre></div><p><strong>\u53D8\u66F4\u8BB0\u5F55</strong></p><p><code>v1.0.0</code> <code>\u6DFB\u52A0</code></p><p><strong>\u529F\u80FD\u63CF\u8FF0</strong></p><blockquote><p>\u8FD9\u662F\u4E00\u4E2A\u6A21\u7CCA <code>Class</code>\u3001<code>Member</code> \u6570\u7EC4 (\u4E0B\u6807) \u4E2A\u6570\u6761\u4EF6\u5B9E\u73B0\u7C7B\u3002</p></blockquote><p>\u53EF\u5BF9 R8 \u6DF7\u6DC6\u540E\u7684 <code>Class</code>\u3001<code>Member</code> \u8FDB\u884C\u66F4\u52A0\u8BE6\u7EC6\u7684\u5B9A\u4F4D\u3002</p><h2 id="int-iszero-i-ext-method" tabindex="-1"><a class="header-anchor" href="#int-iszero-i-ext-method" aria-hidden="true">#</a> Int.isZero <span class="symbol">- i-ext-method</span></h2><div class="language-kotlin ext-kt"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> Int.</span><span style="color:#DCBDFB;">isZero</span><span style="color:#ADBAC7;">()</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>\u53D8\u66F4\u8BB0\u5F55</strong></p><p><code>v1.0.0</code> <code>\u6DFB\u52A0</code></p><p><strong>\u529F\u80FD\u63CF\u8FF0</strong></p><blockquote><p>\u662F\u5426\u4E3A 0\u3002</p></blockquote><h2 id="int-morethan-i-ext-method" tabindex="-1"><a class="header-anchor" href="#int-morethan-i-ext-method" aria-hidden="true">#</a> Int.moreThan <span class="symbol">- i-ext-method</span></h2><div class="language-kotlin ext-kt"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> Int.</span><span style="color:#DCBDFB;">moreThan</span><span style="color:#ADBAC7;">(count</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">Int</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>\u53D8\u66F4\u8BB0\u5F55</strong></p><p><code>v1.0.0</code> <code>\u6DFB\u52A0</code></p><p><strong>\u529F\u80FD\u63CF\u8FF0</strong></p><blockquote><p>\u5927\u4E8E <code>count</code>\u3002</p></blockquote><h2 id="int-lessthan-i-ext-method" tabindex="-1"><a class="header-anchor" href="#int-lessthan-i-ext-method" aria-hidden="true">#</a> Int.lessThan <span class="symbol">- i-ext-method</span></h2><div class="language-kotlin ext-kt"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> Int.</span><span style="color:#DCBDFB;">lessThan</span><span style="color:#ADBAC7;">(count</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">Int</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>\u53D8\u66F4\u8BB0\u5F55</strong></p><p><code>v1.0.0</code> <code>\u6DFB\u52A0</code></p><p><strong>\u529F\u80FD\u63CF\u8FF0</strong></p><blockquote><p>\u5C0F\u4E8E <code>count</code>\u3002</p></blockquote><h2 id="int-ininterval-i-ext-method" tabindex="-1"><a class="header-anchor" href="#int-ininterval-i-ext-method" aria-hidden="true">#</a> Int.inInterval <span class="symbol">- i-ext-method</span></h2><div class="language-kotlin ext-kt"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> Int.</span><span style="color:#DCBDFB;">inInterval</span><span style="color:#ADBAC7;">(countRange</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">IntRange</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">Boolean</span></span>
<span class="line"></span></code></pre></div><p><strong>\u53D8\u66F4\u8BB0\u5F55</strong></p><p><code>v1.0.0</code> <code>\u6DFB\u52A0</code></p><p><strong>\u529F\u80FD\u63CF\u8FF0</strong></p><blockquote><p>\u5728 <code>countRange</code> \u533A\u95F4 A \u2264 this \u2264 B\u3002</p></blockquote>`,31),t=[l];function p(c,r){return o(),n("div",null,t)}const i=s(a,[["render",p],["__file","CountRules.html.vue"]]);export{i as default};
