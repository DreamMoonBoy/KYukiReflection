import{_ as i,r as l,o as t,c as r,a as e,b as a,e as o,d as n}from"./app.454a660d.js";const c={},d=o(`<h1 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h1><blockquote><p>Integrate <code>YukiReflection</code> into your project.</p></blockquote><h2 id="environment-requirements" tabindex="-1"><a class="header-anchor" href="#environment-requirements" aria-hidden="true">#</a> Environment Requirements</h2><ul><li><p>Windows 7 and above / macOS 10.14 and above / Linux distributions (Arch/Debian)</p></li><li><p>Android Studio 2021.1 and above</p></li><li><p>IntelliJ IDEA 2021.1 and above</p></li><li><p>Kotlin 1.7.0 and above</p></li><li><p>Android Gradle Plugin 7.0 and above</p></li><li><p>Gradle 7.0 and above</p></li><li><p>JVM 11 and above</p></li></ul><h2 id="project-requirements" tabindex="-1"><a class="header-anchor" href="#project-requirements" aria-hidden="true">#</a> Project Requirements</h2><p>The project needs to be created using <code>Android Studio</code> or <code>IntelliJ IDEA</code> and the type is an Android project and the <code>Kotlin</code> environment dependency has been integrated.</p><h2 id="integration-dependencies" tabindex="-1"><a class="header-anchor" href="#integration-dependencies" aria-hidden="true">#</a> Integration Dependencies</h2><p><strong>(Optional)</strong> Add dependencies to your project <code>build.gradle</code>.</p><blockquote><p>The following example</p></blockquote><div class="language-groovy ext-groovy line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">repositories {</span></span>
<span class="line"><span style="color:#ADBAC7;">    google()</span></span>
<span class="line"><span style="color:#ADBAC7;">    mavenCentral()</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// MavenCentral has a 2-hour cache, if you cannot integrate the latest version, please add this address</span></span>
<span class="line"><span style="color:#ADBAC7;">    maven { url </span><span style="color:#96D0FF;">&quot;https://s01.oss.sonatype.org/content/repositories/releases&quot;</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Add dependencies to your app <code>build.gradle</code>.</p><blockquote><p>The following example</p></blockquote><div class="language-groovy ext-groovy line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">dependencies {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// Base dependencies</span></span>
<span class="line"><span style="color:#ADBAC7;">    implementation </span><span style="color:#96D0FF;">&#39;com.highcapable.yukireflection:api:&lt;yuki-version&gt;&#39;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Please change <strong>&lt;yuki-version&gt;</strong> to the latest version from <a href="../about/changelog">here</a>.</p>`,14),p={class:"custom-container danger"},u=e("p",{class:"custom-container-title"},"Pay Attention",-1),v=n("If your project is currently using "),h={href:"https://github.com/fankes/YukiHookAPI",target:"_blank",rel:"noopener noreferrer"},b=n("YukiHookAPI"),m=n(", please do not repeatedly integrate "),y=e("strong",null,"YukiReflection",-1),g=n(", because "),A=e("strong",null,"YukiHookAPI",-1),_=n(" already contains the functions and exists for related functional changes and repeated integration will cause functional conflicts and cause exceptions."),k=n("At this time, you should go to the "),f={href:"https://fankes.github.io/YukiHookAPI/en/",target:"_blank",rel:"noopener noreferrer"},C=n("documentation"),D=n(" of "),B=e("strong",null,"YukiHookAPI",-1),q=n(" to view the corresponding tutorial."),x=o(`<p>Modify the <code>Kotlin</code> Jvm version to 11 and above in your app <code>build.gradle</code>.</p><blockquote><p>The following example</p></blockquote><div class="language-groovy ext-groovy line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">android {</span></span>
<span class="line"><span style="color:#ADBAC7;">    compileOptions {</span></span>
<span class="line"><span style="color:#ADBAC7;">        sourceCompatibility </span><span style="color:#F47067;">JavaVersion.</span><span style="color:#6CB6FF;">VERSION_11</span></span>
<span class="line"><span style="color:#ADBAC7;">        targetCompatibility </span><span style="color:#F47067;">JavaVersion.</span><span style="color:#6CB6FF;">VERSION_11</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    kotlinOptions {</span></span>
<span class="line"><span style="color:#ADBAC7;">        jvmTarget </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;11&#39;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function I(F,j){const s=l("ExternalLinkIcon");return t(),r("div",null,[d,e("div",p,[u,e("p",null,[v,e("a",h,[b,a(s)]),m,y,g,A,_]),e("p",null,[k,e("a",f,[C,a(s)]),D,B,q])]),x])}const V=i(c,[["render",I],["__file","quick-start.html.vue"]]);export{V as default};
